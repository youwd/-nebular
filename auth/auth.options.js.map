{"version":3,"file":"auth.options.js","sourceRoot":"","sources":["../../../.ng_build/auth/auth.options.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAW/C,MAAM,CAAC,IAAM,eAAe,GAAQ;IAClC,KAAK,EAAE;QACL,KAAK,EAAE;YACL,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,OAAO;YACjB,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ;SACF;QACD,QAAQ,EAAE;YACR,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ;YACD,KAAK,EAAE,IAAI;SACZ;QACD,eAAe,EAAE;YACf,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ;SACF;QACD,aAAa,EAAE;YACb,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ;SACF;QACD,MAAM,EAAE;YACN,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,OAAO;SAClB;QACD,UAAU,EAAE;YACV,QAAQ,EAAE;gBACR,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,EAAE;aACd;YACD,KAAK,EAAE;gBACL,QAAQ,EAAE,IAAI;aACf;YACD,QAAQ,EAAE;gBACR,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,EAAE;aACd;SACF;KACF;CAEF,CAAC;AAEF,MAAM,CAAC,IAAM,qBAAqB,GAAG,IAAI,cAAc,CAAgB,sBAAsB,CAAC,CAAC;AAC/F,MAAM,CAAC,IAAM,0BAA0B,GAAG,IAAI,cAAc,CAAgB,2BAA2B,CAAC,CAAC;AACzG,MAAM,CAAC,IAAM,uBAAuB,GAAG,IAAI,cAAc,CAAkB,wBAAwB,CAAC,CAAC;AACrG,MAAM,CAAC,IAAM,2BAA2B,GAAG,IAAI,cAAc,CAAkB,oBAAoB,CAAC,CAAC;AACrG,MAAM,CAAC,IAAM,0BAA0B,GAAG,IAAI,cAAc,CAAkB,mCAAmC,CAAC,CAAC","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface NbAuthOptions {\n  forms?: any;\n  providers?: any;\n}\n\nexport interface NbAuthProviders {\n  [key: string]: any;\n}\n\nexport const defaultSettings: any = {\n  forms: {\n    login: {\n      redirectDelay: 500,\n      provider: 'email',\n      rememberMe: true,\n      showMessages: {\n        success: true,\n        error: true,\n      },\n    },\n    register: {\n      redirectDelay: 500,\n      provider: 'email',\n      showMessages: {\n        success: true,\n        error: true,\n      },\n      terms: true,\n    },\n    requestPassword: {\n      redirectDelay: 500,\n      provider: 'email',\n      showMessages: {\n        success: true,\n        error: true,\n      },\n    },\n    resetPassword: {\n      redirectDelay: 500,\n      provider: 'email',\n      showMessages: {\n        success: true,\n        error: true,\n      },\n    },\n    logout: {\n      redirectDelay: 500,\n      provider: 'email',\n    },\n    validation: {\n      password: {\n        required: true,\n        minLength: 4,\n        maxLength: 50,\n      },\n      email: {\n        required: true,\n      },\n      fullName: {\n        required: false,\n        minLength: 4,\n        maxLength: 50,\n      },\n    },\n  },\n\n};\n\nexport const NB_AUTH_OPTIONS_TOKEN = new InjectionToken<NbAuthOptions>('Nebular Auth Options');\nexport const NB_AUTH_USER_OPTIONS_TOKEN = new InjectionToken<NbAuthOptions>('Nebular User Auth Options');\nexport const NB_AUTH_PROVIDERS_TOKEN = new InjectionToken<NbAuthProviders>('Nebular Auth Providers');\nexport const NB_AUTH_TOKEN_WRAPPER_TOKEN = new InjectionToken<NbAuthProviders>('Nebular Auth Token');\nexport const NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken<NbAuthProviders>('Nebular Simple Interceptor Header');\n"]}