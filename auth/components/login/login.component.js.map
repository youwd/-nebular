{"version":3,"file":"login.component.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/components/login/login.component.ts"],"names":[],"mappings":";;;;;AAKA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAElD,OAAO,EAAgB,aAAa,EAAE,MAAM,6BAA6B,CAAC;;IAiGxE,0BAAsB,OAAsB,EACS,QAC/B,MAAc;;QAFd,YAAO,GAAP,OAAO,CAAe;QACS,WAAM,GAAN,MAAM;QACrC,WAAM,GAAN,MAAM,CAAQ;6BAXZ,CAAC;4BACL,EAAE;wBACH,EAAE;sBAEF,EAAE;wBACA,EAAE;oBACX,EAAE;yBACO,KAAK;QAMxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;KAC7D;IAED,gCAAK,GAAL;QAAA,iBAoBC;QAnBC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,MAAoB;YACjF,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;aACtC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;aAClC;YAED,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,UAAU,CAAC;oBACT,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;iBAC5C,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;aACxB;SACF,CAAC,CAAC;KACJ;IAED,yCAAc,GAAd,UAAe,GAAW;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAClD;;gBAhIF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,q8HAgFT;iBACF;;;;gBArFsB,aAAa;gDAkGrB,MAAM,SAAC,qBAAqB;gBAtGlC,MAAM;;2BANf;;SAgGa,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS_TOKEN } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\n\nimport { NbAuthResult, NbAuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'nb-login',\n  template: `\n    <nb-auth-block>\n      <h2 class=\"title\">登  录</h2>\n      <small class=\"form-text sub-title\"></small>\n\n      <form (ngSubmit)=\"login()\" #form=\"ngForm\" autocomplete=\"nope\">\n\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\n             class=\"alert alert-danger\" role=\"alert\">\n          <div><strong>Oh snap!</strong></div>\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\n        </div>\n\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\n             class=\"alert alert-success\" role=\"alert\">\n          <div><strong>Hooray!</strong></div>\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-email\" class=\"sr-only\">Email address</label>\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" \n                 class=\"form-control\" placeholder=\"用户名\" #email=\"ngModel\"\n     >\n                     </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-password\" class=\"sr-only\">Password</label>\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\n                 class=\"form-control\" placeholder=\"密码\" #password=\"ngModel\"\n                         [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\">\n       </div>\n\n        <div class=\"form-group accept-group col-sm-12\">\n          <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\">记住我</nb-checkbox>\n     </div>\n\n        <button [disabled]=\"submitted || !form.valid\" class=\"btn btn-block btn-hero-success\"\n                [class.btn-pulse]=\"submitted\">\n          登录\n        </button>\n   <div style=\"color:white;margin-top:150px;text-align: center;\">&copy;2018江苏新亚勘测设计有限公司                </div>   </form>\n\n      <div class=\"links\">\n        <small class=\"form-text\"></small>\n\n        <div class=\"socials\">\n          <a href=\"https://github.com/akveo\" target=\"_blank\" class=\"socicon-github\"></a>\n          <a href=\"https://www.facebook.com/akveo/\" target=\"_blank\" class=\"socicon-facebook\"></a>\n          <a href=\"https://twitter.com/akveo_inc\" target=\"_blank\" class=\"socicon-twitter\"></a>\n        </div>\n\n        <small class=\"form-text\">\n          <a routerLink=\"../register\"><strong></strong></a>\n        </small>\n      </div>\n    </nb-auth-block>\n  `,\n})\nexport class NbLoginComponent {\n\n  redirectDelay: number = 0;\n  showMessages: any = {};\n  provider: string = '';\n\n  errors: string[] = [];\n  messages: string[] = [];\n  user: any = {};\n  submitted: boolean = false;\n\n  constructor(protected service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS_TOKEN) protected config = {},\n              protected router: Router) {\n\n    this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.login.showMessages');\n    this.provider = this.getConfigValue('forms.login.provider');\n  }\n\n  login(): void {\n    this.errors = this.messages = [];\n    this.submitted = true;\n\n    this.service.authenticate(this.provider, this.user).subscribe((result: NbAuthResult) => {\n      this.submitted = false;\n\n      if (result.isSuccess()) {\n        this.messages = result.getMessages();\n      } else {\n        this.errors = result.getErrors();\n      }\n\n      const redirect = result.getRedirect();\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n    });\n  }\n\n  getConfigValue(key: string): any {\n    return getDeepFromObject(this.config, key, null);\n  }\n}\n"]}